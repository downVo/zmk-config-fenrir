#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define COMBO(NAME, BINDINGS, KEYPOS) \
  combo_##NAME { \
    timeout-ms = <50>; \
    bindings = <BINDINGS>; \
    key-positions = <KEYPOS>; \
    layers = <0 1>; \
  };
  
/ {
    behaviors {   
        rp: require_prior_idle {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <300>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <200>;
            bindings = <&kp>, <&kp>;
        };
    };

    combos {
    compatible = "zmk,combos";
  
    COMBO(esc, &kp ESC, 1 2)
    COMBO(lbsp, &kp BSPC, 2 3)
    COMBO(ret, &kp RET, 12 13)
    COMBO(tab, &kp TAB, 11 12)
    COMBO(equal, &kp EQUAL, 3 13)
    COMBO(pound, &kp POUND, 2 12)
    COMBO(bslh, &kp BSLH, 12 22)
    COMBO(at, &kp AT, 1 11)
    COMBO(dollar, &kp DLLR, 11 21)

    COMBO(rbsp, &kp BSPC, 6 7)
    COMBO(del, &kp DEL, 7 8)
    COMBO(lpar, &kp LPAR, 16 17)
    COMBO(rpar, &kp RPAR, 17 18)
    COMBO(lbkt, &kp LBKT, 26 27)
    COMBO(rbkt, &kp RBKT, 27 28)
    COMBO(plus, &kp PLUS, 6 16)
    COMBO(minus, &kp MINUS, 16 26)
    COMBO(caret, &kp CARET, 5 15)
    COMBO(uscore, &kp UNDER, 15 25)
    COMBO(star, &kp STAR, 7 17)
    COMBO(fslh, &kp FSLH, 17 27)
    COMBO(amps, &kp AMPS, 8 18)
    COMBO(pipe, &kp PIPE, 18 28)
    COMBO(dqt, &kp DQT, 5 6)
    COMBO(sqt, &kp SQT, 15 16)
    COMBO(prcnt, &kp PRCNT, 25 26)
    };
    
    


    keymap {
        compatible = "zmk,keymap";

        default_layer {

// -----------------------------------------------------------------------------------------
// |  Q  |  W  |  E  |  R  |  T  |            |  Y  |  U  |  I  |  O  |  P  |
// |  A  |  S  |  D  |  F  |  G  |            |  H  |  J  |  K  |  L  |  ?  |
// |  Z  |  X  |  C  |  V  |  B  |            |  N  |  M  |  ,  |  .  |  !  |
//             | ctl | shi |SPACE| TO1 || TO2 | RET | gui | DEF |
    
            bindings = <
    &kp Q  &kp W   &kp E       &kp R     &kp T                         &kp Y      &kp U       &kp I       &kp O   &kp P
    &kp A  &kp S   &kp D  &rp LALT F     &kp G                         &kp H      &rp RALT J       &kp K  &kp L   &kp QMARK
    &kp Z  &kp X   &kp C       &kp V     &kp B                         &kp N      &kp M       &kp COMMA   &kp DOT &kp EXCL
                   &kp LCTRL  &kp LSHIFT &lt 1 SPACE  &mo 2     &mo 1  &lt 2 RET  &kp GUI  &to 3
            >;
        };
        
        mod1_layer {

// -----------------------------------------------------------------------------------------
// | OFF |     |  7  |  8  |  9  |            |  7  |  8  |  9  | bt0 | bt0 |
// |     |     |  4  |  5  |  6  |            |  4  |  5  |  6  | bt1 | bt1 |
// |     |  0  |  1  |  2  |  3  |            |  1  |  2  |  3  | bt3 | bt3 |
//       |     | GUI | ctl | mod | TO1 ||     |  0  |SHIFT| btc |
    
            bindings = <
    &kp LA(F4) &none      &kp KP_N7   &kp KP_N8  &kp KP_N9                     &kp KP_N7   &kp KP_N8  &kp KP_N9  &bt BT_SEL 0  &bt BT_DISC 0
    &none      &none      &kp KP_N4   &kp KP_N5  &kp KP_N6                     &kp KP_N4   &kp KP_N5  &kp KP_N6  &bt BT_SEL 1  &bt BT_DISC 1
    &none      &kp KP_N0  &kp KP_N1   &kp KP_N2  &kp KP_N3                     &kp KP_N1   &kp KP_N2  &kp KP_N3  &bt BT_SEL 2  &bt BT_DISC 2
                          &kp LGUI    &kp LCTRL  &none      &to 0       &none  &kp KP_N0   &kp RSHIFT &bt BT_CLR
            >;
        };
        
        mod2_layer {

// -----------------------------------------------------------------------------------------
// |     | END |  UP | HOM | PUP |     |            | F1  | F2  | F3  | F4  |     |
// |     | LFT | DWN | RIG | PDW |     |            | F5  | F6  | F7  | F8  |     |
// |     |     |     |     |     |     |            | F9  | F10 | F11 | F12 |     |
//                   | GUI | ctl |     |     || TO2 | mod |SHIFT|     |
    
            bindings = <
    &none  &kp END  &kp UP    &kp HOME   &kp PG_UP                   &kp F1    &kp F2     &kp F3   &kp F4   &none
    &none &kp LEFT  &kp DOWN  &kp RIGHT  &kp PG_DN                   &kp F5    &kp F6     &kp F7   &kp F8   &none
    &none  &none    &none     &none      &none                       &kp F9    &kp F10    &kp F11  &kp F12  &none
                    &kp LGUI  &kp LCTRL  &none      &none    &to 0   &none     &kp RSHIFT &none
            >;
        };


        mod3_layer {

// -----------------------------------------------------------------------------------------
// |  Q  |  W  |  E  |  R  |  T  |            |  Y  |  U  |  I  |  O  |  P  |
// |SHIFT|  S  |  D  |  F  |  G  |            |  H  |  J  |  K  |  L  |     |
// | CTL |  X  |  C  |  V  |  B  |            |  N  |  M  |  ,  |  .  |     |
//             | ALT | TAB |SPACE| ESC ||     | RET | BSP | DEF |
    
            bindings = <
    &kp Q       &kp W   &kp E     &kp R    &kp T                        &kp Y    &kp U     &kp I      &kp O    &kp P
    &kp LSHIFT  &kp S   &kp D     &kp F    &kp G                        &kp H    &kp J     &kp K      &kp L    &none
    &kp LCTk    RL   &kp X   &kp C     &kp V    &kp B                        &kp N    &kp M     &kp COMMA  &kp DOT  &none
                        &kp LALT  &kp TAB  &kp SPACE  &kp ESC      &none  &kp RET  &kp BSPC  &to 0
            >;
        };
 
    };
};
